FROM ros2_humble_base:latest

ENV ROS_DOMAIN_ID=42

# Install prerequisites for adding GPG keys, if not already present
# and then add/update the ROS GPG key
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    gnupg2 \
    lsb-release \
    && rm -rf /var/lib/apt/lists/* \
    && curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2.list

# Now, update and install ROS2 control and other dependencies
RUN apt-get update && apt-get install -y \
    ros-humble-ros2-control \
    ros-humble-ros2-controllers \
    ros-humble-controller-manager \
    ros-humble-joint-state-publisher \
    ros-humble-joint-trajectory-controller \
    ros-humble-diff-drive-controller \
    ros-humble-xacro \
    ros-humble-joint-state-publisher-gui \
    ros-humble-dynamixel-sdk \
    ros-humble-dynamixel-workbench-toolbox \
    ros-humble-pinocchio \
    ros-humble-tf-transformations \
    ros-humble-imu-tools \
    ros-humble-rmw-cyclonedds-cpp \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies with pip
RUN pip3 install pinocchio pyserial numpy scipy matplotlib filterpy

# Create Articutool workspace directory
RUN mkdir -p /articutool_ws/src

# Clone Articutool repository(s)
RUN git clone https://github.com/personalrobotics/articutool_ros2.git /articutool_ws/src/articutool_ros2

# --- Add ada_moveit and ada_description via updatable sparse checkout ---
# This strategy clones ada_ros2 into a subdirectory and uses sparse checkout.
# This keeps the .git folder with the sparsely checked-out content,
# making it updatable by the entrypoint script.
RUN cd /articutool_ws/src && \
    git clone --no-checkout --depth 1 --branch jjaime2/articutool-integration https://github.com/personalrobotics/ada_ros2.git ada_ros2_dependencies && \
    cd ada_ros2_dependencies && \
    git sparse-checkout init --cone && \
    git sparse-checkout set ada_moveit ada_description && \
    git checkout jjaime2/articutool-integration
    # Result:
    # /articutool_ws/src/ada_ros2_dependencies/.git
    # /articutool_ws/src/ada_ros2_dependencies/ada_moveit/
    # /articutool_ws/src/ada_ros2_dependencies/ada_description/

# Update rosdep and apt repositories (rosdep update was run before, apt-get update here again after adding key)
RUN rosdep update && apt-get update

# Install Articutool dependencies with rosdep
# Ensure this step runs AFTER the ROS GPG key is fixed and apt-get update has succeeded
RUN rosdep install --from-paths /articutool_ws/src --ignore-src -r -y --rosdistro humble

# Build Articutool workspace
RUN bash -c "source /opt/ros/humble/setup.bash && cd /articutool_ws && colcon build --symlink-install"

# Source Articutool setup in .bashrc for interactive shells
RUN echo "source /articutool_ws/install/setup.bash" >> /root/.bashrc
RUN echo "source /opt/ros/humble/setup.bash" >> /root/.bashrc

# Set the working directory
WORKDIR /articutool_ws

# Install Python dependencies from requirements.txt
# Ensure this path is correct relative to the WORKDIR
RUN pip install --no-cache-dir -r src/articutool_ros2/requirements.txt

# Copy and set up the entrypoint script
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# Set the default command to execute
CMD ["ros2", "launch", "articutool_system", "articutool.launch.py", "sim:=real"]
