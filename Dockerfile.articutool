FROM ros2_humble_base:latest

ENV ROS_DOMAIN_ID=42

# Install ROS2 control and other dependencies
RUN apt-get update && apt-get install -y \
    ros-humble-ros2-control \
    ros-humble-ros2-controllers \
    ros-humble-controller-manager \
    ros-humble-joint-state-publisher \
    ros-humble-joint-trajectory-controller \
    ros-humble-diff-drive-controller \
    ros-humble-xacro \
    ros-humble-joint-state-publisher-gui \
    ros-humble-dynamixel-sdk \
    ros-humble-dynamixel-workbench-toolbox \
    ros-humble-pinocchio \
    ros-humble-tf-transformations \
    ros-humble-imu-tools \
    ros-humble-rmw-cyclonedds-cpp \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies with pip
RUN pip3 install pinocchio pyserial numpy scipy matplotlib filterpy

# Create Articutool workspace directory
RUN mkdir -p /articutool_ws/src

# Clone Articutool repository(s)
# This initial clone is still useful to have the repo content in the base image
RUN git clone https://github.com/personalrobotics/articutool_ros2.git /articutool_ws/src/articutool_ros2
# Note: The original Dockerfile had 'mv articutool_ros2 /articutool_ws/src/'.
# Cloning directly to the final path is cleaner.

# --- Add ada_moveit package using sparse checkout ---
RUN mkdir -p /tmp/ada_ros2_checkout && cd /tmp/ada_ros2_checkout \
    && git init \
    && git remote add origin https://github.com/personalrobotics/ada_ros2.git \
    && git config core.sparseCheckout true \
    # Assuming 'ada_moveit' is a top-level directory in the 'ada_ros2' repository.
    # If it's nested, e.g., 'moveit_configs/ada_moveit', adjust the path here.
    && echo "ada_moveit/" >> .git/info/sparse-checkout \
    # Fetch only the specific branch (jjaime2/articutool-integration)
    && git fetch --depth 1 origin jjaime2/articutool-integration \
    && git checkout FETCH_HEAD \
    # Move the checked-out ada_moveit package to the workspace src directory
    # This places ada_moveit alongside your articutool_ros2 directory
    && mv ada_moveit /articutool_ws/src/ \
    # Cleanup temporary directory
    && cd / && rm -rf /tmp/ada_ros2_checkout

# Update rosdep and apt repositories
RUN rosdep update && apt-get update

# Install Articutool dependencies with rosdep
RUN rosdep install --from-paths /articutool_ws/src --ignore-src -r -y --rosdistro humble

# Build Articutool workspace
RUN bash -c "source /opt/ros/humble/setup.bash && cd /articutool_ws && colcon build --symlink-install"

# Source Articutool setup in .bashrc for interactive shells
RUN echo "source /articutool_ws/install/setup.bash" >> /root/.bashrc
RUN echo "source /opt/ros/humble/setup.bash" >> /root/.bashrc # Also ensure ROS setup is in .bashrc

# Set the working directory
WORKDIR /articutool_ws

# Install Python dependencies from requirements.txt
# Ensure this path is correct relative to the WORKDIR
RUN pip install --no-cache-dir -r src/articutool_ros2/requirements.txt

# Copy and set up the entrypoint script
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# Set the default command to execute
# The entrypoint script will source necessary files before executing this.
CMD ["/bin/bash", "-c", "source /root/.bashrc && bash"]
